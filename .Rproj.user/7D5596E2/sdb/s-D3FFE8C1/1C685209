{
    "collab_server" : "",
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\n\n# Load the raw data\nrawData <- read.csv(\"raw.csv\", stringsAsFactors = F)\n\nshinyServer(function(input, output) {\n\n  output$distPlot <- renderPlot({\n\n    # generate bins based on input$bins from ui.R\n    x    <- rawData$budget\n    bins <- seq(min(x), max(x), length.out = input$bins + 1)\n\n    # draw the histogram with the specified number of bins\n    hist(x, breaks = bins, col = 'darkgray', border = 'white')\n    \n    output$Table <- renderTable({\n        output<-data.frame(genres)\n        output\n    })\n\n  })\n\n})\n\n\n## table name \n  genre <- raw$genres\n  genreList <- lapply(genre,function(x) fromJSON(x))\n  genreList <- genreList[sapply(genreList, function(x) as.numeric(dim(x)[1])) > 0]\n  genreList <- genreList[!sapply(genreList, is.null)]\n  genres <- unique(Reduce(union, genreList)) ",
    "created" : 1508835773380.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "4050174107",
    "id" : "1C685209",
    "lastKnownWriteTime" : 1509012280,
    "last_content_update" : 1509012280529,
    "path" : "D:/Lab/Final9/final9/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}